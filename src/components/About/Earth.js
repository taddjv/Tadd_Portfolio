/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public/models/Earth.glb
Author: BlockedGravity (https://sketchfab.com/blockedgravity)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/little-planet-earth-d54bb387f62147dcbf4be0605068b1cc
Title: Little Planet Earth
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useGeneral } from "../../context";
import { useSpring, animated } from "@react-spring/three";
import { useFrame } from "@react-three/fiber";

export function Earth(props) {
  const { nodes, materials } = useGLTF("/models/Earth.glb");
  const { location } = useGeneral();

  const earthRef = useRef();

  const [position] = useSpring(
    {
      "position-y": location === "down" ? 0 : -1,
      scale: location === "down" ? [0.0002, 0.0002, 0.0002] : [0, 0, 0],
      config: {
        mass: 5,
        tension: 400,
        friction: 50,
        precision: 0.0001,
      },
    },
    [location]
  );

  useFrame(() => {
    earthRef.current.rotation.y += 0.02;
    earthRef.current.position.z =
      (Math.sin(Date.now() * 0.001) * window.innerWidth) / 6000;
  });
  return (
    <animated.group {...props} {...position} ref={earthRef} dispose={null}>
      <mesh
        geometry={nodes.Clouds_2_Clouds_1.geometry}
        material={materials.Clouds}
        position={[0, 0, -500]}
      />
      <mesh
        geometry={nodes.Ocean_Mat_0.geometry}
        material={materials.material}
        position={[0, 0, -500]}
      />
      <mesh
        geometry={nodes.CONT_Extrude_Mat3_0.geometry}
        material={materials["Mat.3"]}
        position={[-64.3, 10.84, -5]}
      />
      <mesh
        geometry={nodes.SP_Extrude_Ice_0.geometry}
        material={materials.material_3}
        position={[0, 500, -500]}
      />
      <mesh
        geometry={nodes.NP_Extrude_Ice_0.geometry}
        material={materials.material_3}
        position={[0, -500, -500]}
      />
    </animated.group>
  );
}

useGLTF.preload("/models/Earth.glb");
