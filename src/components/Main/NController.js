/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public/models/NController.glb
*/

import React from "react";
import { useGLTF, useCursor } from "@react-three/drei";
import { useGeneral } from "../../context";
import { useSpring, animated } from "@react-spring/three";

export function NController(props) {
  const { nodes, materials } = useGLTF("./models/NController.glb");
  const { buttonHover, setButtonHover, location, setLocation } = useGeneral();

  useCursor(buttonHover);
  const [position] = useSpring(
    {
      "position-y":
        (["center", "right"].includes(location) && -0.125) ||
        (location === "up" && -0.9) ||
        (location === "down" && 0.9),
      "position-z":
        (location === "center" && 0.0001) ||
        (location === "right" && -1.5) ||
        (location === "left" && 1.5),
      scale: location === "center" ? [1, 1, 1] : [0, 0, 0],

      config: {
        mass: 5,
        tension: 400,
        friction: 50,
        precision: 0.0001,
      },
    },
    [location]
  );
  return (
    <animated.group
      rotation={[0, 180 * (Math.PI / 180), 90 * (Math.PI / 180)]}
      {...position}
      {...props}
      dispose={null}
    >
      <mesh
        geometry={nodes.defaultMaterial001.geometry}
        material={materials.DefaultMaterial}
        position={[0.86, 0, -0.12]}
        onPointerOver={() => setButtonHover("yellow")}
        onPointerOut={() => setButtonHover(null)}
        onClick={(e) => {
          setLocation("down");
        }}
      >
        <meshStandardMaterial
          {...materials.DefaultMaterial}
          emissive={"yellow"}
          emissiveIntensity={buttonHover === "yellow" ? 0.25 : 0}
        />
      </mesh>

      <mesh
        geometry={nodes.defaultMaterial002.geometry}
        material={materials.DefaultMaterial}
        position={[0.86, 0, -0.12]}
        onPointerOver={(e) => setButtonHover("red")}
        onPointerOut={(e) => setButtonHover(null)}
        onClick={(e) => setLocation("left")}
      >
        <meshStandardMaterial
          {...materials.DefaultMaterial}
          emissive={"red"}
          emissiveIntensity={buttonHover === "red" ? 0.5 : 0}
        />
      </mesh>
      <mesh
        geometry={nodes.defaultMaterial003.geometry}
        material={materials.DefaultMaterial}
        position={[0.86, 0, -0.12]}
        onPointerOver={(e) => setButtonHover("blue")}
        onPointerOut={(e) => setButtonHover(null)}
        onClick={(e) => setLocation("up")}
      >
        <meshStandardMaterial
          {...materials.DefaultMaterial}
          emissive={"blue"}
          emissiveIntensity={buttonHover === "blue" ? 0.5 : 0}
        />
      </mesh>
      <mesh
        geometry={nodes.defaultMaterial004.geometry}
        material={materials.DefaultMaterial}
        position={[0.86, 0, -0.12]}
        onPointerOver={(e) => setButtonHover("green")}
        onPointerOut={(e) => setButtonHover(null)}
        onClick={(e) => setLocation("right")}
      >
        <meshStandardMaterial
          {...materials.DefaultMaterial}
          emissive={"green"}
          emissiveIntensity={buttonHover === "green" ? 0.5 : 0}
        />
      </mesh>
      <mesh
        geometry={nodes.defaultMaterial007.geometry}
        material={materials.DefaultMaterial}
        position={[0.86, 0, -0.12]}
      />

      <mesh
        geometry={nodes.defaultMaterial008.geometry}
        material={materials.DefaultMaterial}
        position={[0.86, 0, -0.12]}
      />
      <mesh
        geometry={nodes.defaultMaterial009.geometry}
        material={materials.DefaultMaterial}
        position={[0.86, 0, -0.12]}
      />
      <mesh
        geometry={nodes.defaultMaterial010.geometry}
        material={materials.DefaultMaterial}
        position={[0.86, 0, -0.12]}
      />
      <mesh
        geometry={nodes.defaultMaterial011.geometry}
        material={materials.DefaultMaterial}
        position={[0.86, 0, -0.12]}
      />

      <mesh
        geometry={nodes.defaultMaterial012.geometry}
        material={materials.DefaultMaterial}
        position={[0.86, 0, -0.12]}
      />
    </animated.group>
  );
}

useGLTF.preload("./models/NController.glb");
