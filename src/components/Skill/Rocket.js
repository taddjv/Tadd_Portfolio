/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public/models/Rocket.glb
Author: Rain (https://sketchfab.com/rainfab)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/rocket-53ce2cc1530f43afad208305f921b67f
Title: Rocket
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { useGeneral } from "../../context";
import { useSpring, animated } from "@react-spring/three";

export function Rocket(props) {
  const { nodes, materials } = useGLTF("./models/Rocket.glb");
  const rocketRef = useRef();
  const { location, setLocation } = useGeneral();

  const [position] = useSpring(
    {
      "position-y": location === "left" ? 0 : -1,
      scale: location === "left" ? [0.02, 0.02, 0.02] : [0, 0, 0],
      config: {
        mass: 5,
        tension: 400,
        friction: 50,
        precision: 0.0001,
      },
    },
    [location]
  );

  useFrame(() => {
    rocketRef.current.rotation.y += 0.12;
    if (rocketRef.current.position.z < -1) {
      rocketRef.current.position.z = 1;
    } else {
      rocketRef.current.position.z -= 0.01;
    }
  });

  return (
    <animated.group
      rotation={[-90 * (Math.PI / 180), 0, 0]}
      {...position}
      ref={rocketRef}
      {...props}
    >
      <mesh geometry={nodes.Object_4.geometry} material={materials.phong2SG} />
      <mesh geometry={nodes.Object_5.geometry} material={materials.blinn1SG} />
      <mesh geometry={nodes.Object_6.geometry} material={materials.blinn2SG} />
      <mesh geometry={nodes.Object_7.geometry} material={materials.blinn3SG} />
      <mesh geometry={nodes.Object_8.geometry} material={materials.phong1SG} />
      <mesh geometry={nodes.Object_9.geometry} material={materials.blinn5SG} />
    </animated.group>
  );
}

useGLTF.preload("./models/Rocket.glb");
